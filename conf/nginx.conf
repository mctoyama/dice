worker_processes  5;

events {
    worker_connections 1024;
}
http {

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '/usr/share/lua/5.1/?.lua;/var/www/dice/?.lua;/var/www/dicelib/?.lua;/var/www/dicedaemon/?.lua;;';

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath '/usr/lib/i386-linux-gnu/lua/5.1/?.so;/usr/lib/x86_64-linux-gnu/lua/5.1/?.so;;';

    sendfile off;

    server {
       listen         80;
       server_name    pixelndice.org;
       return         301 https://$server_name$request_uri;
    }

    server {
        server_name pixelndice.org;
	listen   443;
	ssl    on;
	ssl_certificate_key /etc/letsencrypt/live/pixelndice.org/privkey.pem;
	ssl_certificate /etc/letsencrypt/live/pixelndice.org/cert.pem;

	access_log logs/access.log;
	error_log logs/error.log;

        location / {
            default_type text/html;
            content_by_lua '
             local indexPage = require("indexPage")
             indexPage.get()
            ';
        }

        location /login {
            default_type text/html;
            content_by_lua '
                local loginPage = require("loginPage")
                loginPage.get()
            ';
        }

        location /account/verify {
            default_type text/html;
            content_by_lua '
                local verifyAccountPage = require("verifyAccountPage")
                verifyAccountPage.get()
            ';
        }

        location /account/create {
            default_type text/html;
            content_by_lua '
                local createAccountPage = require("createAccountPage")
                createAccountPage.get()
            ';
        }

        location /gameon {
            default_type text/html;
            content_by_lua '
                local gameonPage = require("gameonPage")
                gameonPage.get()
            ';
        }

        location /api/account/verify {
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local verifyAccountAPI = require("verifyAccountAPI")
                verifyAccountAPI.post()
            ';
        }

        location /api/account/create {
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local createAccountAPI = require("createAccountAPI")
                createAccountAPI.post()
            ';
        }

        location /api/account/login {
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local loginAccountAPI = require("loginAccountAPI")
                loginAccountAPI.post()
            ';
        }

        location /api/account/logoff {
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local logoffAPI = require("logoffAPI")
                logoffAPI.post()
            ';
        }

        location /api/campaign/create{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local createCampaignAPI = require("createCampaignAPI")
                createCampaignAPI.post()
            ';
        }

        location /api/campaign/delete{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local deleteCampaignAPI = require("deleteCampaignAPI")
                deleteCampaignAPI.post()
            ';
        }

        location /api/map/list{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local listMapAPI = require("listMapAPI")
                listMapAPI.post()
            ';
        }

        location /api/map/load{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local loadMapAPI = require("loadMapAPI")
                loadMapAPI.post()
            ';
        }

        location /api/map/create{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local createMapAPI = require("createMapAPI")
                createMapAPI.post()
            ';
        }

        location /api/map/rename{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local renameMapAPI = require("renameMapAPI")
                renameMapAPI.post()
            ';
        }

        location /api/map/save{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local saveMapAPI = require("saveMapAPI")
                saveMapAPI.post()
            ';
        }

        location /api/map/delete{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local deleteMapAPI = require("deleteMapAPI")
                deleteMapAPI.post()
            ';
        }

        location /api/image/upload{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local uploadImageAPI = require("uploadImageAPI")
                uploadImageAPI.post()
            ';
        }

        location /api/image/delete{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local deleteImageAPI = require("deleteImageAPI")
                deleteImageAPI.post()
            ';
        }

        location /api/image/list{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local listImageAPI = require("listImageAPI")
                listImageAPI.post()
            ';
        }

        location /api/image/get{
            limit_except GET {
                deny all;
            }
            content_by_lua '
                local getImageAPI = require("getImageAPI")
                getImageAPI.get()
            ';
        }

        location /api/image/updatetags{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local updateImageTagsAPI = require("updateImageTagsAPI")
                updateImageTagsAPI.post()
            ';
        }

        location /api/image/searchtags{
            default_type application/json;
            limit_except POST {
                deny all;
            }
            content_by_lua '
                local searchImageTagsAPI = require("searchImageTagsAPI")
                searchImageTagsAPI.post()
            ';
        }

        location /js/ {
            default_type text/javascript;
            root /var/www/dice/html;
        }

        location /css/ {
            default_type text/css;
            root /var/www/dice/html;
        }

        location /fonts/ {
            default_type text/fonts;
            root /var/www/dice/html;
        }

        location /images/ {
            default_type image/png;
            root /var/www/dice/html;
         }
    }

#    server{
#        listen 80;
#        server_name blog.pixelndice.org;
#        root /var/www/blog;
#
#        location / {
#            default_type text/html;
#            content_by_lua '
#            local indexPage = require("indexPage")
#            indexPage.get()
#            ';
#        }
#
#        location /fonts/ {
#            default_type text/fonts;
#        }
#
#        location /js/ {
#            default_type text/javascript;
#        }
#
#        location /css/ {
#            default_type text/css;
#        }
#    }
}